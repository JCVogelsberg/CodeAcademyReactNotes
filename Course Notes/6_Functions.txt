Day 6  - Functions
-------------------------

Functions

- The "verbs" of programming, functions are the building blocks of all JS programs
- Reusable blocks of code that group together a sequence of statements to perform a specific task
- Return statement: captures the result of a function to display
- Functions are first class objects, they can have properties and methods.
- Since functions are a type of object, they have properties such as:
  * .length
  * .name
  * ...and methods such as .toString()

-------------------------

Creating Functions
- Function Declaration:

  function exampleFunction() {
    console.log("I'm an example function.");
  }


- Function Expression:

  const exampleFunction = function() {
    console.log("I'm an example function.");
  }


- Arrow Function Syntax

  const exampleFunction = () => {
    console.log("I'm an example function.");
  }

  -------------------------

  New in ES6: ARROW FUNCTIONS

  - Remove the need to type out the keyword function every time you need to create a function

    const exampleFunction = () => {
      console.log("I'm an example function.");
    }

  - Concise Body Arrow Functions:
    * The most condensed form of the function
    * Single parameters don't need parentheses, only 0 parameters, or 2 or more

      const exampleFunction = paramOne => {};
      const exampleFunction = (paramOne, paramTwo) => {};

    * single-line code blocks in function don't require curly braces!

      const squareNum = num => num * num;

-------------------------

New in ES6: DEFAULT PARAMETERS

- Allow parameters to have a predetermined value in case there is no argument passed into the function or if the argument is undefined when called.

Example:
	function greeting (name = 'stranger') {
	  console.log(`Hello, ${name}!`);
	}

* 'stranger' is the default parameter
